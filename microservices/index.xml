<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>microservices on Mason Chu</title>
    <link>https://masonchu.github.io/microservices/</link>
    <description>Recent content in microservices on Mason Chu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Fri, 29 Jun 2018 11:03:34 +0800</lastBuildDate>
    
	<atom:link href="https://masonchu.github.io/microservices/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>開始 microservices</title>
      <link>https://masonchu.github.io/microservices/start-microservices/</link>
      <pubDate>Fri, 29 Jun 2018 11:03:34 +0800</pubDate>
      
      <guid>https://masonchu.github.io/microservices/start-microservices/</guid>
      <description>monolithic vs microservices 以往在建構大型系統的時候，本來也就是會區分成多個部分來進行。像是常見的金流物流系統，就是將部分系統功能區分出去。microservices 則是將這種概念又更延伸到極致。
前置作業 開始進行 microservices 至少要具備的基本建設。
開發相關配置  服務發現 service discovery
 k8s etcd consul Netflix/eureka  事件訊息 event sourcing messaging  kafka  系統監控 monitor
 metrics 訊息傳遞 transport  grpc thrift http  斷路器 Circuit Breaker 紀錄追蹤 Log Tracking  opentracing zipkin  Auth  Devops  CI / CD Docker k8s  golang 相關套件  go-kit https://github.com/go-kit/kit go-micro https://github.com/micro/go-micro gizmo https://github.com/nytimes/gizmo  造成延伸問題 microservices solve organizational problems</description>
    </item>
    
    <item>
      <title>安裝和啟用 NSQ 服務</title>
      <link>https://masonchu.github.io/microservices/install-and-start-nsq/</link>
      <pubDate>Thu, 21 Jun 2018 15:53:16 +0800</pubDate>
      
      <guid>https://masonchu.github.io/microservices/install-and-start-nsq/</guid>
      <description>安裝 NSQ 在本機測試環境 NSQ 本身有提供 brew / docker 版本。在這邊我是直接使用 github 原始碼下載編譯，注意 golang 1.7+ 並且已經有 dep 套件管理。在 test.sh 會執行 golang test &amp;amp; 編譯出所有的可執行檔。
下載 source code &amp;amp; 安裝相依性套件 git clone https://github.com/nsqio/nsq $GOPATH/src/github.com/nsqio/nsq cd $GOPATH/src/github.com/nsqio/nsq dep ensure  測試 &amp;amp; 編譯 ./test.sh  安裝 NSQ 安裝至 /usr/local/bin 目錄
make install  依序啟動服務 nsqlookupd 預設監聽 http:4161 / tcp:4160，而 nsqd 啟動時自動到 nsqlookupd 註冊。
nsqlookupd nsqd --lookupd-tcp-address=127.0.0.1:4160 nsqadmin --lookupd-http-address=127.0.0.1:4161  使用 go-nsq 發布與接受訊息 發佈環境配置 使用在 microservices 中時候，nsqd 建議並不是全部 services 共用，而是個別配置一個 localhost 的 nsqd 註冊到 nsqlookupd。</description>
    </item>
    
  </channel>
</rss>