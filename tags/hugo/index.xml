<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on KY Chu</title>
    <link>https://masonchu.github.io/tags/hugo/</link>
    <description>Recent content in Hugo on KY Chu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Wed, 05 Jul 2017 12:35:25 +0800</lastBuildDate>
    
	<atom:link href="https://masonchu.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>第一次使用 Hugo 就上手</title>
      <link>https://masonchu.github.io/post/first-hugo/</link>
      <pubDate>Wed, 05 Jul 2017 12:35:25 +0800</pubDate>
      
      <guid>https://masonchu.github.io/post/first-hugo/</guid>
      <description>基本介紹 Hugo 是一套生成靜態頁面的工具(static site generator)。利用 Markdown 將內容跟樣式外觀完整分開，再利用生成的靜態網頁直接發佈到 server 上。般來說 markdown 語法對應樣式種類會比較少，但是相對的也是幫助在寫作的時候專注在內容而不是樣式上。
與動態的 blog 平台比較 優點  很容易對文章內容進行 git 版控或是多人協作
 生成的靜態網頁瀏覽速度很快，也不需要對 server 系統依賴
 容易互相在同類型的靜態生成工具之間轉換，只要把 markdown 的文章內容帶著走就好了
  缺點  需要熟悉 markdown , git
 通常不會有線上編輯模式或是管理平台
 如果想要取得流量或讀者留言需要註冊其他服務  第一次安裝 如果是 mac OS 只要執行
brew install hugo  就可以直接安裝完成，之後進入選定好儲存檔案的目錄下
hugo new site &amp;lt;SiteName&amp;gt;  就會建立出預設的檔案目錄
選擇 Theme 挑選寫作工具 常用指令 // 建立可以發佈的靜態檔案 hugo // 建立 local 端 server 連同草稿 hugo server --buildDrafts  Hugo 官網說明文件 https://gohugo.</description>
    </item>
    
  </channel>
</rss>