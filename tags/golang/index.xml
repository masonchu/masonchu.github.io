<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Mason Chu</title>
    <link>https://masonchu.github.io/tags/golang/</link>
    <description>Recent content in Golang on Mason Chu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Mon, 25 Jun 2018 14:54:21 +0800</lastBuildDate>
    
	<atom:link href="https://masonchu.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用 GVM 管理 go 版本</title>
      <link>https://masonchu.github.io/post/gvm-go-version/</link>
      <pubDate>Mon, 25 Jun 2018 14:54:21 +0800</pubDate>
      
      <guid>https://masonchu.github.io/post/gvm-go-version/</guid>
      <description>基本介紹 GVM 是一套管理 golang 版本的套件，類似於 nodeJS / nvm。
安裝 GVM bash &amp;lt; &amp;lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)  安裝之後應該會在 bashrc 下加入 source 的指令，如果安裝完還是找不到 gvm 指令就需要檢查一下這塊。
source &amp;quot;/Users/&amp;lt;username&amp;gt;/.gvm/scripts/gvm&amp;quot;  首次使用 GVM 使用 GVM 安裝 Go1.4 與之後版本。go1.4 版本之後使用 go 對自己編譯，因此沒有安裝 go 的狀況下之後的版本都是無法編譯的。
gvm install go1.4 --binary # 直接安裝 binary gvm use go1.4 # 使用 go1.4 的環境 export GOROOTBOOTSTRAP=$GOROOT # 設定 $GOROOTBOOTSTRAP gvm install go1.6 # 安裝 Go 1.6 Installing go1.6...  常用指令 gvm list	- 列出全部已經安裝的版本 gvm listall	- 列出線上可安裝版本 gvm use	- 切換使用特定版本  Reference https://github.</description>
    </item>
    
    <item>
      <title>開始 microservices 架構</title>
      <link>https://masonchu.github.io/post/start-microservices/</link>
      <pubDate>Wed, 05 Jul 2017 15:52:11 +0800</pubDate>
      
      <guid>https://masonchu.github.io/post/start-microservices/</guid>
      <description>monolithic vs microservices 以往在建構大型系統的時候，本來也就是會區分成多個部分來進行。像是常見的金流物流系統，就是將部分系統功能區分出去。microservices 則是將這種概念又更延伸到極致。
前置作業 開始進行 microservices 至少要具備的基本建設。
開發相關配置  服務發現 service discovery
 k8s etcd consul Netflix/eureka  事件訊息 event sourcing messaging  kafka  系統監控 monitor
 metrics 訊息傳遞 transport  grpc thrift http  斷路器 Circuit Breaker 紀錄追蹤 Log Tracking  opentracing zipkin  Auth  Devops  CI / CD Docker k8s  golang 相關套件  go-kit https://github.com/go-kit/kit go-micro https://github.com/micro/go-micro gizmo https://github.com/nytimes/gizmo  造成延伸問題 microservices solve organizational problems</description>
    </item>
    
  </channel>
</rss>